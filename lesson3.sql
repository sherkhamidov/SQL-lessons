-- Active: 1674041361256@@127.0.0.1@5432@myproject
DO
$$
    BEGIN

        -- FOR I IN 1..10 LOOP
        -- FOR I IN reverse 10..1 LOOP
        FOR I IN reverse 10..1 BY 2 LOOP

            RAISE INFO '%', I;

        END LOOP;

    END;

$$
;

SELECT *
FROM GENERATE_SERIES(1, 10)
;

SELECT *
FROM GENERATE_SERIES(0.1, 10)
;

SELECT *
FROM GENERATE_SERIES(
    '1994-01-13 00:00' ::TIMESTAMP,
    '2021-01-13 00:00' ::TIMESTAMP,
    '1 YEAR'
);


CREATE TABLE USERS(
    USER_ID SERIAL NOT NULL PRIMARY KEY,
    USERNAME VARCHAR(32) NOT NULL,
    FIRSTNAME VARCHAR(24) NOT NULL,
    LASTNAME VARCHAR(24) NOT NULL,
    CREATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- TRIGGER
CREATE FUNCTION TRIGGER_USERS () RETURNS TRIGGER LANGUAGE PLPGSQL AS
$$


        BEGIN
            IF NEW.USERNAME IS NOT NULL AND NEW.LASTNAME IS NOT NULL THEN

                UPDATE USERS SET RATING = 5 WHERE USER_ID = NEW.USER_ID;
            
            ELSIF NEW.USERNAME IS NOT NULL PR NEW.LASTNAME IS NOT NULL THEN

                UPDATE USERS SET RATING = 3 WHERE USER_ID = NEW.USER_ID;

        
        END IF;

    END;

$$
;

CREATE TRIGGER USERS_TRIGGER
BEFORE INSERT ON USERS
FOR EACH ROW EXECUTE PROCEDURE USER_TRIGGER_FN()
;

INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ('SAUD', 'ABDULWAHEED');

DROP TRIGGER USER_TRIGGER ON USERS;